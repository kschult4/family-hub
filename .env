# Google Calendar API Configuration
# Get these from https://console.cloud.google.com/

# Google Calendar API Key (required)
VITE_GOOGLE_CALENDAR_API_KEY=AIzaSyAYiobTSL1_Zn2ZZQXp140AM23U7wlELpk

# OAuth2 Client ID (optional, for private calendars)
VITE_GOOGLE_CLIENT_ID=your_client_id_here

# Calendar ID (optional, defaults to 'primary')
# For specific calendar: calendar_id@gmail.com
VITE_CALENDAR_ID=kyle.e.schultz@gmail.com

# Home Assistant API Configuration
# Replace with your Home Assistant instance details

# Home Assistant URL (required) - using proxy in development
VITE_HA_BASE_URL=/api/ha

# Home Assistant Long-Lived Access Token (required) - handled by proxy in development
# Generate this in HA: Profile > Security > Long-lived access tokens
VITE_HA_TOKEN=

# Development mode - set to 'true' to use mock data instead of real HA
VITE_USE_MOCK_HA=false

# Ring MQTT Configuration
# MQTT broker WebSocket URL for Ring motion alerts
# Home Assistant MQTT broker on Raspberry Pi

# MQTT WebSocket Configuration - Trying alternative port
VITE_MQTT_BROKER_URL=ws://192.168.1.224:8083

# Other options (try these if 8083 doesn't work):
# VITE_MQTT_BROKER_URL=ws://192.168.1.224:9001
# VITE_MQTT_BROKER_URL=ws://192.168.1.224:1883
# VITE_MQTT_BROKER_URL=ws://192.168.1.224:1884

# MQTT Authentication - Using your provided credentials
VITE_MQTT_USERNAME=dev
VITE_MQTT_PASSWORD=Gustoff100!